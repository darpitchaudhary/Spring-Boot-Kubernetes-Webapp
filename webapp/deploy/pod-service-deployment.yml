#kind: Service
#apiVersion: v1
#metadata:
#  name: springboot-postgres-k8s
#  labels:
#    name: springboot-postgres-k8s
#spec:
#  ports:
#    - port: 8080
#
#  selector:
#    app: springboot-postgres-k8s
#  type: LoadBalancer



---
apiVersion: v1
kind: Pod
metadata:
  name: springboot-postgres-k8s
  labels:
    app: springboot-postgres-k8s
spec:
  imagePullSecrets:
    - name: regcred
  containers:
    - name: springboot-postgres-k8s
      image: 'shubhamkawane0502/webapp:33b605fbf643586f16e58abb9211472703a508fe'
      imagePullPolicy: "Always"
      ports:
        - containerPort: 8080
      readinessProbe:
        httpGet:
          path: /v1/readiness/test
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 5
      livenessProbe:
        httpGet:
          path: /v1/liveness/test
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 5
      env:   # Setting Enviornmental Variables
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: dbname
        - name: DB_HOST
          value: 'csye6225-310222:us-east1:webapp-instance-189ea810'
#          valueFrom:
#            secretKeyRef:
#              name: cloudsql-db-credentials
#              key: dbhost
    - name: cloudsql-proxy
      image: gcr.io/cloudsql-docker/gce-proxy:1.16
      command: [ "/cloud_sql_proxy","--dir=/cloudsql",
                 "-instances=csye6225-310222:us-east1:webapp-instance-189ea810=tcp:5432",
                 "-credential_file=/secrets/cloudsql/sql_credentials.json" ]
      volumeMounts:
        - name: my-secrets-volume
          mountPath: /secrets/cloudsql
          readOnly: true
        - name: cloudsql
          mountPath: /cloudsql
  volumes:
    - name: my-secrets-volume
      secret:
        secretName: cloudsql-instance-credentials
    - name: cloudsql
      emptyDir: { }